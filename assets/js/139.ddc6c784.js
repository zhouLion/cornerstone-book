(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{504:function(e,t,o){"use strict";o.r(t);var i=o(49),a=Object(i.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"images"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#images"}},[e._v("#")]),e._v(" Images")]),e._v(" "),o("p",[o("RouterLink",{attrs:{to:"/zh/concepts/image-loaders.html"}},[e._v("Image Loaders")]),e._v(" 返回一个 "),o("strong",[e._v("Image")]),e._v(" 对象。")],1),e._v(" "),o("p",[e._v("Image 对象可用的属性可以在 API 文档中的 "),o("RouterLink",{attrs:{to:"/zh/api.html#image"}},[e._v("Image 对象定义")]),e._v(" 中查看：")],1),e._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[e._v("提示")]),e._v(" "),o("h3",{attrs:{id:"image"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#image"}},[e._v("#")]),e._v(" Image")]),e._v(" "),o("p",[e._v("An Image Object in Cornerstone")]),e._v(" "),o("p",[e._v("Type: [Object]")]),e._v(" "),o("h4",{attrs:{id:"properties"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("imageId")]),e._v(" "),o("strong",[e._v("[string]")]),e._v(" The imageId associated with this image object")]),e._v(" "),o("li",[o("code",[e._v("minPixelValue")]),e._v(" "),o("strong",[e._v("[Number]")]),e._v(" the minimum stored pixel value in the image")]),e._v(" "),o("li",[o("code",[e._v("maxPixelValue")]),e._v(" "),o("strong",[e._v("[Number]")]),e._v(" the maximum stored pixel value in the image")]),e._v(" "),o("li",[o("code",[e._v("slope")]),e._v(" "),o("strong",[e._v("[Number]")]),e._v(" the rescale slope to convert stored pixel values to modality pixel values or 1 if not specified")]),e._v(" "),o("li",[o("code",[e._v("intercept")]),e._v(" "),o("strong",[e._v("[Number]")]),e._v(" the rescale intercept used to convert stored pixel values to modality values or 0 if not specified")]),e._v(" "),o("li",[o("code",[e._v("windowCenter")]),e._v(" "),o("strong",[e._v("[Number]")]),e._v(" the default windowCenter to apply to the image")]),e._v(" "),o("li",[o("code",[e._v("windowWidth")]),e._v(" "),o("strong",[e._v("[Number]")]),e._v(" the default windowWidth to apply to the image")]),e._v(" "),o("li",[o("code",[e._v("getPixelData")]),e._v(" "),o("strong",[e._v("[function]")]),e._v(" a function that returns the underlying pixel data. An array of integers for grayscale and an array of RGBA for color")]),e._v(" "),o("li",[o("code",[e._v("getImageData")]),e._v(" "),o("strong",[e._v("[function]")]),e._v(" a function that returns a canvas imageData object for the image. This is only needed for color images")]),e._v(" "),o("li",[o("code",[e._v("getCanvas")]),e._v(" "),o("strong",[e._v("[function]")]),e._v(" a function that returns a canvas element with the image loaded into it. This is only needed for color images.")]),e._v(" "),o("li",[o("code",[e._v("getImage")]),e._v(" "),o("strong",[e._v("[function]")]),e._v(" a function that returns a JavaScript Image object with the image data. This is optional and typically used for images encoded in standard web JPEG and PNG formats")]),e._v(" "),o("li",[o("code",[e._v("rows")]),e._v(" "),o("strong",[e._v("[Number]")]),e._v(" number of rows in the image. This is the same as height but duplicated for convenience")]),e._v(" "),o("li",[o("code",[e._v("columns")]),e._v(" "),o("strong",[e._v("[Number]")]),e._v(" number of columns in the image. This is the same as width but duplicated for convenience")]),e._v(" "),o("li",[o("code",[e._v("height")]),e._v(" "),o("strong",[e._v("[Number]")]),e._v(" the height of the image. This is the same as rows but duplicated for convenience")]),e._v(" "),o("li",[o("code",[e._v("width")]),e._v(" "),o("strong",[e._v("[Number]")]),e._v(" the width of the image. This is the same as columns but duplicated for convenience")]),e._v(" "),o("li",[o("code",[e._v("color")]),e._v(" "),o("strong",[e._v("[Boolean]")]),e._v(" true if pixel data is RGB, false if grayscale")]),e._v(" "),o("li",[o("code",[e._v("lut")]),e._v(" "),o("strong",[e._v("[Object]")]),e._v(" The Lookup Table")]),e._v(" "),o("li",[o("code",[e._v("rgba")]),e._v(" "),o("strong",[e._v("[Boolean]")]),e._v(" Is the color pixel data stored in RGBA?")]),e._v(" "),o("li",[o("code",[e._v("columnPixelSpacing")]),e._v(" "),o("strong",[e._v("[Number]")]),e._v(" horizontal distance between the middle of each pixel (or width of each pixel) in mm or undefined if not known")]),e._v(" "),o("li",[o("code",[e._v("rowPixelSpacing")]),e._v(" "),o("strong",[e._v("[Number]")]),e._v(" vertical distance between the middle of each pixel (or height of each pixel) in mm or undefined if not known")]),e._v(" "),o("li",[o("code",[e._v("invert")]),e._v(" "),o("strong",[e._v("[Boolean]")]),e._v(" true if the the image should initially be displayed be inverted, false if not. This is here mainly to support DICOM images with a photometric interpretation of MONOCHROME1")]),e._v(" "),o("li",[o("code",[e._v("sizeInBytes")]),e._v(" "),o("strong",[e._v("[Number]")]),e._v(" the number of bytes used to store the pixels for this image.")]),e._v(" "),o("li",[o("code",[e._v("falseColor")]),e._v(" "),o("strong",[e._v("[Boolean]?")]),e._v(" Whether or not the image has undergone false color mapping")]),e._v(" "),o("li",[o("code",[e._v("origPixelData")]),e._v(" "),o("strong",[e._v("[Array]?")]),e._v(" Original pixel data for an image after it has undergone false color mapping")]),e._v(" "),o("li",[o("code",[e._v("stats")]),e._v(" "),o("strong",[e._v("ImageStats?")]),e._v(" Statistics for the last redraw of the image")]),e._v(" "),o("li",[o("code",[e._v("cachedLut")]),e._v(" "),o("strong",[e._v("[Object]")]),e._v(" Cached Lookup Table for this image.")]),e._v(" "),o("li",[o("code",[e._v("colormap")]),e._v(" "),o("strong",[e._v("([String] | Colormap)?")]),e._v(" Depreacted. Use viewport.colormap instead. an optional colormap ID or colormap object (from colors/colormap.js). This will be applied during rendering to convert the image to pseudocolor")]),e._v(" "),o("li",[o("code",[e._v("labelmap")]),e._v(" "),o("strong",[e._v("[Boolean]?")]),e._v(" whether or not to render this image as a label map (i.e. skip modality and VOI LUT pipelines and use only a color lookup table)")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);