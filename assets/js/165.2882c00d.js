(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{530:function(t,s,n){"use strict";n.r(s);var e=n(49),o=Object(e.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"debugging"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#debugging"}},[t._v("#")]),t._v(" Debugging")]),t._v(" "),n("p",[t._v("Cornerstone Tools is using the "),n("a",{attrs:{href:"https://github.com/visionmedia/debug/",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("debug")]),n("OutboundLink")],1),t._v(" library for logging debug information.")]),t._v(" "),n("p",[t._v('By default, in the minified "production" build of cornerstone tools, only\nerrors will be logged to the console.')]),t._v(" "),n("p",[t._v('When using the un-minified or "development" build, you may also see some\nwarnings logged to the console in some scenarios.')]),t._v(" "),n("p",[t._v("But there is more log information available if you need it.")]),t._v(" "),n("h2",{attrs:{id:"turning-debug-logs-on-and-off"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#turning-debug-logs-on-and-off"}},[t._v("#")]),t._v(" Turning debug logs on and off")]),t._v(" "),n("p",[n("code",[t._v("cornerstoneTools")]),t._v(" exports "),n("code",[t._v("enableLogger")]),t._v(" and "),n("code",[t._v("disableLogger")]),t._v(" methods as top level api methods.")]),t._v(" "),n("p",[n("code",[t._v("enableLogger")]),t._v(" takes a scoping string with which you can specify scopes to be included / excluded.")]),t._v(" "),n("p",[t._v("Multiple scopes are comma separated. Excluding a scope is done by prefixing with "),n("code",[t._v("-")]),t._v(". You can use the "),n("code",[t._v("*")]),t._v(" match against many scopes.")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" cornerstoneTools "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cornerstone-tools'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Enable logging")]),t._v("\ncornerstoneTools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enableLogger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// defaults to "cornerstoneTools:*" which will print all logs from the cornerstoneTools package')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This is just some sugar ontop of the debug library. You can enable all")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// debug logging â€“ including things outside of cornerstoneTools")]),t._v("\ncornerstoneTools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enableLogger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Only show logs from setToolMode.js")]),t._v("\ncornerstoneTools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enableLogger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cornerstoneTools:store:setToolMode'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Show all logs, but exclude the eventDispatchers (which can be a bit noisy)")]),t._v("\ncornerstoneTools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enableLogger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cornerstoneTools:*,-cornerstoneTools:eventDispatchers:*'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Disable logging")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prevSettings "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cornerstoneTools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("disableLogger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `disableLogger` returns a string of the previous settings in case")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// you wanted to toggle logging off and back on later.")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Eg. this would re-enable the previous settings")]),t._v("\ncornerstoneTools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enableLogging")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevSettings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("As this is based on the wonderful "),n("code",[t._v("debug")]),t._v(" library, you can also enable/disable\nthe logger when you don't have access to "),n("code",[t._v("cornerstoneTools")]),t._v(" by using "),n("code",[t._v("localStorage")]),t._v(".")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This will enable all cornerstoneTools logs")]),t._v("\nlocalStorage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setItem")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'debug'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cornerstoneTools:*'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// You will need to refresh the browser for this setting to take effect")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=o.exports}}]);