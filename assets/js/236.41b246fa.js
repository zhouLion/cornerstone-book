(window.webpackJsonp=window.webpackJsonp||[]).push([[236],{603:function(e,t,a){"use strict";a.r(t);var r=a(49),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"development-process"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#development-process"}},[e._v("#")]),e._v(" Development Process")]),e._v(" "),a("p",[e._v("NOTE: This document describes the proposed development process for cornerstone and related libraries (e.g. dicomParser).\nPlease feel free to post your thoughts and contribute to it.")]),e._v(" "),a("h2",{attrs:{id:"principles"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#principles"}},[e._v("#")]),e._v(" Principles")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("the 'master' branch is always releasable")])]),e._v(" "),a("li",[a("p",[e._v("the 'master' branch should never degrade in functionality or quality")])])]),e._v(" "),a("h2",{attrs:{id:"process"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#process"}},[e._v("#")]),e._v(" Process")]),e._v(" "),a("p",[e._v("To support the above principles, the following process is followed:")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("All work shall be done on feature branches.  A feature branch is a git branch based on the 'master' branch created\nspecifically for a given feature.")])]),e._v(" "),a("li",[a("p",[e._v("Pull request shall be made for feature branches only.  Pull requests for changes to 'master' or 'dev' branches\nwill be rejected.")])]),e._v(" "),a("li",[a("p",[e._v("Owners of feature branches are responsible for keeping their feature branch up to date (rebased) with the 'master'\nbranch.")])]),e._v(" "),a("li",[a("p",[e._v("Once a library maintainer determines a feature branch is of sufficient quality, they shall merge it into the\n'dev' branch.")])]),e._v(" "),a("li",[a("p",[e._v("Once a library maintainer determines that the 'dev' branch is ready for testing, an announcement will be made\nto the cornerstone platform google group asking for volunteers to help test it.")])]),e._v(" "),a("li",[a("p",[e._v("Once a library maintainer determines that the 'dev' branch has been suitably tested, they will merge it into\n'master' and post a message on the cornerstone platform forum listing the changes.")])]),e._v(" "),a("li",[a("p",[e._v("If a regression in functionality or quality is observed in a new release, library maintainers shall work to\nfix or revert the change as quickly as possible.")])])]),e._v(" "),a("h2",{attrs:{id:"quality"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quality"}},[e._v("#")]),e._v(" Quality")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Unit tests should be provided that exercise most (if not all) code paths")])]),e._v(" "),a("li",[a("p",[e._v("All unit tests must pass before release")])]),e._v(" "),a("li",[a("p",[e._v("Test data shall be provided to assist with functional testing")])]),e._v(" "),a("li",[a("p",[e._v("Code shall pass jshint without generating any warnings")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);