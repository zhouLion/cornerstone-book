(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{582:function(s,t,n){"use strict";n.r(t);var e=n(49),a=Object(e.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"debugging"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#debugging"}},[s._v("#")]),s._v(" Debugging")]),s._v(" "),n("p",[s._v("Cornerstone Tools is using the "),n("a",{attrs:{href:"https://github.com/visionmedia/debug/",target:"_blank",rel:"noopener noreferrer"}},[n("code",[s._v("debug")]),n("OutboundLink")],1),s._v(" library for logging debug information.")]),s._v(" "),n("p",[s._v('By default, in the minified "production" build of cornerstone tools, only\nerrors will be logged to the console.')]),s._v(" "),n("p",[s._v('When using the un-minified or "development" build, you may also see some\nwarnings logged to the console in some scenarios.')]),s._v(" "),n("p",[s._v("But there is more log information available if you need it.")]),s._v(" "),n("h2",{attrs:{id:"turing-debug-logs-on-and-off"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#turing-debug-logs-on-and-off"}},[s._v("#")]),s._v(" Turing debug logs on and off")]),s._v(" "),n("p",[n("code",[s._v("cornerstoneTools")]),s._v(" exports "),n("code",[s._v("enableLogger")]),s._v(" and "),n("code",[s._v("disableLogger")]),s._v(" methods as top level api methods.")]),s._v(" "),n("p",[n("code",[s._v("enableLogger")]),s._v(" takes a scoping string with which you can specify scopes to be included / excluded.")]),s._v(" "),n("p",[s._v("Multiple scopes are comma separated. Excluding a scope is done by prefixing with "),n("code",[s._v("-")]),s._v(". You can use the "),n("code",[s._v("*")]),s._v(" match against many scopes.")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" csTools "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cornerstone-tools'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Enable logging")]),s._v("\ncsTools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("enableLogger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// defaults to "cornerstoneTools:*" which will print all logs from the cornerstoneTools package')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// This is just some sugar ontop of the debug library. You can enable all")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// debug logging â€“ including things outside of cornerstoneTools")]),s._v("\ncsTools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("enableLogger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Only show logs from setToolMode.js")]),s._v("\ncsTools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("enableLogger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cornerstoneTools:store:setToolMode'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Show all logs, but exclude the eventDispatchers (which can be a bit noisy)")]),s._v("\ncsTools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("enableLogger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cornerstoneTools:*,-cornerstoneTools:eventDispatchers:*'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Disable logging")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" prevSettings "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" csTools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("disableLogger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// `disableLogger` returns a string of the previous settings in case")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// you wanted to toggle logging off and back on later.")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Eg. this would re-enable the previous settings")]),s._v("\ncsTools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("enableLogging")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prevSettings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),n("p",[s._v("As this is based on the wonderful "),n("code",[s._v("debug")]),s._v(" library, you can also enable/disable\nthe logger when you don't have access to "),n("code",[s._v("csTools")]),s._v(" by using "),n("code",[s._v("localStorage")]),s._v(".")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// This will enable all cornerstoneTools logs")]),s._v("\nlocalStorage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setItem")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'debug'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cornerstoneTools:*'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// You will need to refresh the browser for this setting to take effect")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);