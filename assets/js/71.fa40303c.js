(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{438:function(t,s,a){"use strict";a.r(s);var e=a(49),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"segmentation-tools-segmentation-tool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#segmentation-tools-segmentation-tool"}},[t._v("#")]),t._v(" Segmentation Tools {#segmentation-tool}")]),t._v(" "),a("p",[t._v('"Segmentation Tools" are derivatives of '),a("code",[t._v("BaseTool")]),t._v(" that interact with the labelmap layer in some way other than by manually brushing, for which you would choose to derive from "),a("code",[t._v("BaseBrushTool")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"anatomy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#anatomy"}},[t._v("#")]),t._v(" Anatomy")]),t._v(" "),a("p",[t._v("Segmentation Tools are more of a modular design pattern rather than a tool type, and so are constructed via composition rather than inheritance.")]),t._v(" "),a("p",[a("code",[t._v("SegmentationTool")]),t._v("s are comprised of a few components:")]),t._v(" "),a("ul",[a("li",[t._v("A "),a("RouterLink",{attrs:{to:"/cornerstone-tools/latest/tool-mixins/#segmentation-mixins"}},[t._v("Segmentation Mixin")]),t._v(" - The role of a segmentation mixin is to provide a delineation mechanism, which generates an "),a("code",[t._v("operationData")]),t._v(" object which is passed to the active strategy alongside the cornerstone event.")],1),t._v(" "),a("li",[t._v("One or more "),a("code",[t._v("strategies")]),t._v(" to be called when the segmentation mixin calls "),a("code",[t._v("this.applyActiveStrategy(evt, operationData)")]),t._v(".")]),t._v(" "),a("li",[t._v("An (optional) set of "),a("code",[t._v("cursors")]),t._v(" for "),a("code",[t._v("strategies")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("p",[t._v("Below is an example of a Segementation Tool:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @public\n * @class CircleScissorsTool\n * @memberof Tools\n * @classdesc Tool for manipulating labelmap data using a circle.\n * @extends Tools.Base.BaseTool\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CircleScissorsTool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseTool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @inheritdoc */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" defaultProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CircleScissors'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      strategies"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FILL_INSIDE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fillInsideCircle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FILL_OUTSIDE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fillOutsideCircle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ERASE_OUTSIDE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" eraseOutsideCircle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ERASE_INSIDE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" eraseInsideCircle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      cursors"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FILL_INSIDE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" segCircleFillInsideCursor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FILL_OUTSIDE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" segCircleFillOutsideCursor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ERASE_OUTSIDE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" segCircleEraseOutsideCursor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ERASE_INSIDE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" segCircleEraseInsideCursor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      defaultStrategy"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'FILL_INSIDE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      supportedInteractionTypes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Mouse'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Touch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      svgCursor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" segCircleFillInsideCursor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      mixins"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'circleSegmentationMixin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" defaultProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Lets analyse the components unique to segmentation tools:")]),t._v(" "),a("h4",{attrs:{id:"segmentation-mixins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#segmentation-mixins"}},[t._v("#")]),t._v(" Segmentation Mixins")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\nmixins"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'circleSegmentationMixin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n")])])]),a("p",[t._v("The "),a("code",[t._v("mixins")]),t._v(" prop can be used as with "),a("code",[t._v("BaseTool")]),t._v(", but at least one "),a("RouterLink",{attrs:{to:"/cornerstone-tools/latest/tool-mixins/#segmentation-mixins"}},[t._v("segmentation mixin")]),t._v(" must be used. The job the segmentation mixin is to take user input through some means, implement "),a("code",[t._v("_applyStrategy")]),t._v(", and call the "),a("code",[t._v("strategy")]),t._v(" with appropriate input.")],1),t._v(" "),a("h4",{attrs:{id:"mixin-aware-strategies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mixin-aware-strategies"}},[t._v("#")]),t._v(" Mixin-aware Strategies")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\nstrategies"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FILL_INSIDE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fillInsideCircle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FILL_OUTSIDE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fillOutsideCircle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ERASE_OUTSIDE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" eraseOutsideCircle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ERASE_INSIDE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" eraseInsideCircle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\ndefaultStrategy"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'FILL_INSIDE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n")])])]),a("p",[t._v("The "),a("code",[t._v("strategies")]),t._v(" prop defines a set of operations that can be executed at the end of delineation. The strategies implemented should expect "),a("code",[t._v("operationData")]),t._v(" of the form provided by the segmentation mixin implemented by the Tool.")])])}),[],!1,null,null,null);s.default=n.exports}}]);